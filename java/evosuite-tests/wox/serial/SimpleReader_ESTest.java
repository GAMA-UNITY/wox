/*
 * This file was automatically generated by EvoSuite
 * Fri Dec 26 00:34:08 SGT 2014
 */

package wox.serial;

import static org.junit.Assert.*;
import org.junit.Test;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.EvoSuiteFile;
import org.jdom2.Content;
import org.jdom2.Element;
import org.jdom2.Namespace;
import org.junit.runner.RunWith;
import wox.serial.SimpleReader;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, resetStaticState = true) 
public class SimpleReader_ESTest extends SimpleReader_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * 1 wox.serial.SimpleReader.reference(Lorg/jdom2/Element;)Z: I5 Branch 10 IFNULL L138 - true
   * 2 wox.serial.SimpleReader.empty(Lorg/jdom2/Element;)Z: I13 Branch 9 IFNE L129 - true
   * 3 wox.serial.SimpleReader.read(Lorg/jdom2/Element;)Ljava/lang/Object;: I15 Branch 2 IFEQ L72 - true
   */

  @Test
  public void test0()  throws Throwable  {
      SimpleReader simpleReader0 = new SimpleReader();
      Namespace namespace0 = Namespace.getNamespace("lekyng1f3t");
      Element element0 = new Element("lekyng1f3t", namespace0);
      Element element1 = element0.addContent("lekyng1f3t");
      // Undeclared exception!
      try {
        Object object0 = simpleReader0.read(element0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // StringEquals is not supposed to work on a null caller
         //
      }
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * 1 wox.serial.SimpleReader.empty(Lorg/jdom2/Element;)Z: I6 Branch 8 IFNE L128 - false
   * 2 wox.serial.SimpleReader.empty(Lorg/jdom2/Element;)Z: I13 Branch 9 IFNE L129 - false
   * 3 wox.serial.SimpleReader.read(Lorg/jdom2/Element;)Ljava/lang/Object;: I5 Branch 1 IFEQ L69 - false
   */

  @Test
  public void test1()  throws Throwable  {
      SimpleReader simpleReader0 = new SimpleReader();
      Element element0 = new Element("idref", "idref");
      Object object0 = simpleReader0.read(element0);
      assertEquals(Content.CType.Element, element0.getCType());
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * 1 wox.serial.SimpleReader.<init>()V: root-Branch
   * 2 wox.serial.SimpleReader.reference(Lorg/jdom2/Element;)Z: I5 Branch 10 IFNULL L138 - false
   * 3 wox.serial.SimpleReader.empty(Lorg/jdom2/Element;)Z: I6 Branch 8 IFNE L128 - true
   * 4 wox.serial.SimpleReader.read(Lorg/jdom2/Element;)Ljava/lang/Object;: I5 Branch 1 IFEQ L69 - true
   * 5 wox.serial.SimpleReader.read(Lorg/jdom2/Element;)Ljava/lang/Object;: I15 Branch 2 IFEQ L72 - false
   */

  @Test
  public void test2()  throws Throwable  {
      SimpleReader simpleReader0 = new SimpleReader();
      Element element0 = new Element("idref", "idref");
      Element element1 = element0.setAttribute("idref", "idref");
      Object object0 = simpleReader0.read(element0);
      assertEquals(Content.CType.Element, element0.getCType());
  }
}
